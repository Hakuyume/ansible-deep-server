- name: fetch path
  command: which mpiexec
  register: result
  changed_when: false
  failed_when: false
- name: check path
  set_fact:
    installed: "{{ result.stdout == prefix + '/bin/mpiexec' }}"
- name: fetch version
  shell: mpiexec --version | head -n1 | perl -anE 'say $F[-1]'
  register: result
  changed_when: false
  when: installed
- name: check version
  set_fact:
    installed: "{{ result.stdout == openmpi_version }}"
  when: installed

- name: fetch source
  get_url:
    url: "https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-{{ openmpi_version }}.tar.bz2"
    dest: "{{ cache_dir }}/openmpi-{{ openmpi_version }}.tar.bz2"
  when: not installed
- name: make tempdir
  tempfile:
    state: directory
  register: tempdir
  when: not installed
- name: extract source
  unarchive:
    src: "{{ cache_dir }}/openmpi-{{ openmpi_version }}.tar.bz2"
    dest: "{{ tempdir.path }}"
    remote_src: yes
  when: not installed
- name: configure
  command: "./configure --prefix {{ prefix }} --with-cuda"
  args:
    chdir: "{{ tempdir.path }}/openmpi-{{ openmpi_version }}"
  when: not installed
- name: build
  command: "make -j{{ njobs }}"
  args:
    chdir: "{{ tempdir.path }}/openmpi-{{ openmpi_version }}"
  when: not installed
- name: install
  command: "make install"
  args:
    chdir: "{{ tempdir.path }}/openmpi-{{ openmpi_version }}"
  when: not installed
